@use "../utils/variables"as var;

@mixin flex($justify: center, $align: center) {
  display: flex;
  justify-content: $justify;
  align-items: $align;
}

@mixin btn-shadow-with-hover {
  box-shadow: 0 5px 10px rgba(0, 0, 0, 0.20);

  &:hover {
    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.30);
  }
}

@mixin btn-shadow-without-hover {
  box-shadow: 0 5px 10px rgba(0, 0, 0, 0.20);
}

@mixin step-icon-color {
  color: darken(var.$main-color, 50%);
}

@mixin step-btn-hover {
  $hue: hue(var.$primary-color);
  $satu: saturation(var.$primary-color);
  $hsl: lightness(var.$main-color);
  background-color: hsl($hue, $satu, $hsl);
}

// Used for the span green button on the restaurant's tiles
@mixin light-back-dark-font ($color: var.$tertiary-color) {
  background-color: $color;
  color: darken($color, 45%);
}

@mixin like-btn ($font-size:28px, $top:0px, $right:0px, $bottom:0px, $left:0px, $bg-size:40px) {
  .like-btn {
    font-size: $font-size;
    overflow: visible;

    &__main {
      position: absolute;
      z-index: 4;
      color: transparent;
      top: $top;
      right: $right;
      bottom: $bottom;
      left: $left;
      height: $font-size;
      width: $font-size;

      animation-direction: reverse;

      &:hover {
        cursor: pointer;
        background-image: url("../assets/png/wave.png");
        -moz-background-clip: text;
        -o-background-clip: text;
        -webkit-background-clip: text;
        background-clip: text;
        -webkit-animation: wave-animation 1s ease-in forwards, loading-animation 1.5s ease-in forwards;
        animation: wave-animation 1s ease-in forwards, loading-animation 1.5s ease-in forwards;
        background-size: $bg-size $bg-size;
        background-repeat: repeat-x;
        opacity: 1;
        overflow: visible;
      }
    }

    &__background {
      position: absolute;
      z-index: 3;
      overflow: visible;
      top: $top;
      right: $right;
      bottom: $bottom;
      left: $left;
      height: $font-size;
      width: $font-size;
      color: black;
    }
  }
}

@mixin tablet-resp {
  @media screen and (min-width: map-get(var.$breakpoints, smartphone)) and (max-width: map-get(var.$breakpoints, tablet)) {
    @content
  }
}

@mixin desktop-resp {
  @media screen and (min-width: map-get(var.$breakpoints, tablet)) {
    @content
  }
}